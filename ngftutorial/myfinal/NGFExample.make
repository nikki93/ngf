# C++ Console Executable Makefile autogenerated by premake
# Don't edit this file! Instead edit `premake.lua` then rerun `make`

ifndef CONFIG
  CONFIG=Debug
endif

# if multiple archs are defined turn off automated dependency generation
DEPFLAGS := $(if $(word 2, $(TARGET_ARCH)), , -MMD)

ifeq ($(CONFIG),Debug)
  BINDIR := bin
  LIBDIR := .
  OBJDIR := obj/debug
  OUTDIR := bin/debug
  CPPFLAGS := $(DEPFLAGS) -D "DEBUG" -D "_DEBUG" -I "/home/nikki/Development/Libraries/ogre/ogre-1.60/Samples/Common/include/" -I "/home/nikki/Development/Libraries/ogre/btogre/include/" -I "../../include" -I "include" -I "."
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -g `pkg-config OGRE --cflags``pkg-config OIS --cflags``pkg-config MyGUI --cflags``pkg-config bullet --cflags` -g -pg
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) `pkg-config OGRE --libs``pkg-config OIS --libs``pkg-config MyGUI --libs``pkg-config bullet --libs` -pg -L"/home/nikki/Development/Libraries/squirrel/lib" -lpython2.6 -lboost_python
  LDDEPS :=
  RESFLAGS := -D "DEBUG" -D "_DEBUG" -I "/home/nikki/Development/Libraries/ogre/ogre-1.60/Samples/Common/include/" -I "/home/nikki/Development/Libraries/ogre/btogre/include/" -I "../../include" -I "include" -I "."
  TARGET := NGFExample_d
  BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)

  define prebuildcmd
	@echo Running pre-build commands...
	pydef/runpydef.sh
  endef
endif

ifeq ($(CONFIG),Release)
  BINDIR := bin
  LIBDIR := .
  OBJDIR := obj/release
  OUTDIR := bin/release
  CPPFLAGS := $(DEPFLAGS) -I "/home/nikki/Development/Libraries/ogre/ogre-1.60/Samples/Common/include/" -I "/home/nikki/Development/Libraries/ogre/btogre/include/" -I "../../include" -I "include" -I "."
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -O2 `pkg-config OGRE --cflags``pkg-config OIS --cflags``pkg-config MyGUI --cflags``pkg-config bullet --cflags` -O3 -funroll-loops
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -s `pkg-config OGRE --libs``pkg-config OIS --libs``pkg-config MyGUI --libs``pkg-config bullet --libs` -pg -L"/home/nikki/Development/Libraries/squirrel/lib" -lpython2.6 -lboost_python
  LDDEPS :=
  RESFLAGS := -I "/home/nikki/Development/Libraries/ogre/ogre-1.60/Samples/Common/include/" -I "/home/nikki/Development/Libraries/ogre/btogre/include/" -I "../../include" -I "include" -I "."
  TARGET := NGFExample
  BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)

  define prebuildcmd
	@echo Running pre-build commands...
	pydef/runpydef.sh
  endef
endif

OBJECTS := \
	$(OBJDIR)/BtOgre.o \
	$(OBJDIR)/main.o \
	$(OBJDIR)/ConfigScript.o \
	$(OBJDIR)/Ngf.o \
	$(OBJDIR)/NgfPython.o \

MKDIR_TYPE := msdos
CMD := $(subst \,\\,$(ComSpec)$(COMSPEC))
ifeq (,$(CMD))
  MKDIR_TYPE := posix
endif
ifeq (/bin/sh.exe,$(SHELL))
  MKDIR_TYPE := posix
endif
ifeq ($(MKDIR_TYPE),posix)
  CMD_MKBINDIR := mkdir -p $(BINDIR)
  CMD_MKLIBDIR := mkdir -p $(LIBDIR)
  CMD_MKOUTDIR := mkdir -p $(OUTDIR)
  CMD_MKOBJDIR := mkdir -p $(OBJDIR)
else
  CMD_MKBINDIR := $(CMD) /c if not exist $(subst /,\\,$(BINDIR)) mkdir $(subst /,\\,$(BINDIR))
  CMD_MKLIBDIR := $(CMD) /c if not exist $(subst /,\\,$(LIBDIR)) mkdir $(subst /,\\,$(LIBDIR))
  CMD_MKOUTDIR := $(CMD) /c if not exist $(subst /,\\,$(OUTDIR)) mkdir $(subst /,\\,$(OUTDIR))
  CMD_MKOBJDIR := $(CMD) /c if not exist $(subst /,\\,$(OBJDIR)) mkdir $(subst /,\\,$(OBJDIR))
endif

.PHONY: clean prebuild

$(OUTDIR)/$(TARGET): prebuild $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking NGFExample
	-@$(CMD_MKBINDIR)
	-@$(CMD_MKLIBDIR)
	-@$(CMD_MKOUTDIR)
	@$(BLDCMD)

prebuild:
	$(prebuildcmd)

clean:
	@echo Cleaning NGFExample
ifeq ($(MKDIR_TYPE),posix)
	-@rm -f $(OUTDIR)/$(TARGET)
	-@rm -rf $(OBJDIR)
else
	-@if exist $(subst /,\,$(OUTDIR)/$(TARGET)) del /q $(subst /,\,$(OUTDIR)/$(TARGET))
	-@if exist $(subst /,\,$(OBJDIR)) del /q $(subst /,\,$(OBJDIR))
	-@if exist $(subst /,\,$(OBJDIR)) rmdir /s /q $(subst /,\,$(OBJDIR))
endif

$(OBJDIR)/BtOgre.o: BtOgre.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/main.o: main.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/ConfigScript.o: ../../ConfigScript.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/Ngf.o: ../../Ngf.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/NgfPython.o: ../../plugins/ngfpython/NgfPython.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

-include $(OBJECTS:%.o=%.d)

